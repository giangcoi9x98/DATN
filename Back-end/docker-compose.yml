version: "3.3"

services:
  # rabbitmq:
  #   image: rabbitmq:3
  #   container_name: 'rabbitmq'
  #   environment:
  #     RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
  #     RABBITMQ_DEFAULT_USER: "rabbitmq"
  #     RABBITMQ_DEFAULT_PASS: "rabbitmq"
  #     RABBITMQ_DEFAULT_VHOST: "/"
  #   ports:
  #     - 5672:5672
  #     - 15672:15672
      
  #   volumes:
  #     - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
  #     - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
  #   hostname: rabbitmq
  #   networks:
  #     - internal
  # /etc/grafana/grafana.ini
  
  # grafana:
  #   image: grafana/grafana
  #   ports:
  #     - 3333:3000
  #   user: "472"

  # influxdb:
  #   image: influxdb:1.8.4
  #   ports:
  #     - 8086:8086
  #   volumes:
  #     - influxdb-storage:/var/lib/influxdb
  #   environment:
  #     INFLUXDB_DB: crash_db
  #     INFLUXDB_ADMIN_USER: admin
  #     INFLUXDB_ADMIN_PASSWORD: admin
  #   networks:
  #     - internal
  
  nats:
    container_name: nats_transporter
    image: nats
    # restart: always
    ports:
      - 4222:4222
    networks:
      - internal
  mysql:
    image: mysql:5.7
    container_name: mysql_db
    environment: 
      MYSQL_ROOT_PASSWORD: 'password'
      MYSQL_USER: 'giang1908'
      MYSQL_PASSWORD: 'giang1908'
      MYSQL_DATABASE: 'network_social'
    hostname: mysql  
    ports: 
      - 3306:3306
    volumes: 
      - mysql_data:/var/lib/mysql
    networks: 
      - internal      
  # postgres:
  #   container_name: postgresql
  #   image: postgres
  #   # restart: always
  #   environment:
  #     POSTGRES_USER: postgres
  #     POSTGRES_PASSWORD: secret_password
  #     POSTGRES_DB: db
  #   ports:
  #     - 5433:5432
  #   volumes:
  #     - pg_data:/var/lib/postgresql/data
  #   networks:
  #     - internal

  # `docker inspect container_id` to see IPAddress: 172.22.0.1
  # pgadmin:
  #   image: dpage/pgadmin4
  #   depends_on:
  #     - postgres
  #   ports:
  #     - "5555:80"
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
  #     PGADMIN_DEFAULT_PASSWORD: admin
  #   restart: unless-stopped
  #   # Turn off logs
  #   logging:
  #     driver: none

  redis:
    container_name: redis
    image: redis
    # restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--bind", "redis", "--port", "6379"]
    networks:
      - internal

  # api:
  #   build:
  #     context: .
  #   image: back-end
  #   # env_file: docker-compose.env
  #   environment:
  #     # SERVICES: api # Runner will start only the 'api' service in this container
  #     PORT: 3000    # Port of API gateway
  #     TRANSPORTER: nats://nats:4222
  #     REDIS_HOST: redis
  #     REDIS_PORT: 6379
  #     # INFLUX_HOST: influxdb
  #     # INFLUX_PORT: 8086
  #     # INFLUX_DB: crash_db
  #     MYSQL_HOST: mysql
  #     MYSQL_PORT: 3306
  #     MYSQL_USER: root
  #     MYSQL_PASSWORD: password
  #     MYSQL_DB: network_social
  #     # POSTGRES_URI: postgresql://postgres:secret_password@postgresql:5432/db
  #     # RABBITMQ_URI: amqp://rabbitmq:rabbitmq@rabbitmq:5672/
  #   # restart: on-failure  
  #   depends_on:
  #     - nats
  #     # - postgres
  #     - redis
  #     - mysql
  #     # - influxdb
  #     # - rabbitmq
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.http.routers.api-gw.rule=PathPrefix(`/`)"
  #     - "traefik.http.services.api-gw.loadbalancer.server.port=3000"
  #   networks:
  #     - internal
  #   volumes:
  #     - ./:/app
  #     - /app/node_modules

  # traefik:
  #   image: traefik:v2.1
  #   command:
  #     - "--api.insecure=true" # Don't do that in production!
  #     - "--providers.docker=true"
  #     - "--providers.docker.exposedbydefault=false"
  #   ports:
  #     - 3000:80
  #     - 3001:8080
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #   networks:
  #     - internal
  #     - default

networks:
  internal:
    # driver: bridge #https://github.com/luin/ioredis/issues/763#issuecomment-731860825

volumes:
  data:
  mysql_data:
  redis_data:
  # pg_data:
  # influxdb-storage:
